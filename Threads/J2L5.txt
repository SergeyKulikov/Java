https://github.com/SergeyKulikov/Java/tree/master/Threads

В варианте J2L5 смотрел скорость расчета через потоки. Можно поиграться количеством потоков и посмотреть скорость расчета для каждого потока и общее затраченное время.

Thread-0 has started.
Thread-0 completed in 11680 msec.
Totally completed in 11694 msec.

Thread-1 has started.
Thread-2 has started.
Thread-3 has started.
Thread-4 has started.
Thread-5 has started.
Thread-6 has started.
Thread-7 has started.
Thread-8 has started.
Thread-2 completed in 988 msec.
Thread-1 completed in 1034 msec.
Thread-3 completed in 1347 msec.
Thread-6 completed in 1843 msec.
Thread-4 completed in 1865 msec.
Thread-5 completed in 1904 msec.
Thread-7 completed in 2440 msec.
Thread-8 completed in 3144 msec.
Totally completed in 3166 msec for 8 threads.

Threads work in 3,693620 times faster!
The values of the arrays are the same.


В втором варианте J2L5_1 смотрел как меняется общая скорость расчета в зависимости от количества потоков. У меня скорость расчета начала падать после 250 потоков.

Totally completed in 11652 msec.



Totally completed in 2076 msec for 50 threads.

Threads work in 5,612717 times faster!
The values of the arrays are the same.

Totally completed in 1671 msec for 100 threads.

Threads work in 6,973070 times faster!
The values of the arrays are the same.

Totally completed in 1633 msec for 150 threads.

Threads work in 7,135334 times faster!
The values of the arrays are the same.

Totally completed in 1636 msec for 200 threads.

Threads work in 7,122250 times faster!
The values of the arrays are the same.

Totally completed in 1633 msec for 250 threads.

Threads work in 7,135334 times faster!
The values of the arrays are the same.

Totally completed in 1685 msec for 300 threads.

Threads work in 6,915133 times faster!
The values of the arrays are the same.

Totally completed in 1662 msec for 350 threads.

Threads work in 7,010830 times faster!
The values of the arrays are the same.

Totally completed in 1644 msec for 400 threads.

Threads work in 7,087591 times faster!
The values of the arrays are the same.

Totally completed in 1660 msec for 450 threads.

Threads work in 7,019277 times faster!
The values of the arrays are the same.

Totally completed in 1678 msec for 500 threads.

Threads work in 6,943981 times faster!
The values of the arrays are the same.

Totally completed in 1701 msec for 550 threads.

Threads work in 6,850088 times faster!
The values of the arrays are the same.

Totally completed in 1874 msec for 600 threads.

Threads work in 6,217716 times faster!
The values of the arrays are the same.

Totally completed in 1867 msec for 650 threads.

Threads work in 6,241028 times faster!
The values of the arrays are the same.

Totally completed in 1888 msec for 700 threads.

Threads work in 6,171610 times faster!
The values of the arrays are the same.

Totally completed in 1875 msec for 750 threads.

Threads work in 6,214400 times faster!
The values of the arrays are the same.

Totally completed in 1856 msec for 800 threads.

Threads work in 6,278017 times faster!
The values of the arrays are the same.

Totally completed in 1792 msec for 850 threads.

Threads work in 6,502232 times faster!
The values of the arrays are the same.

Totally completed in 1775 msec for 900 threads.

Threads work in 6,564507 times faster!
The values of the arrays are the same.

Totally completed in 1787 msec for 950 threads.

Threads work in 6,520425 times faster!
The values of the arrays are the same.

Totally completed in 1825 msec for 1000 threads.

Threads work in 6,384657 times faster!
The values of the arrays are the same.